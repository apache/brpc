name: Build and Test on Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  proc_num: $(nproc)

jobs:
  gcc-compile-with-make:
    runs-on: ubuntu-latest # https://github.com/actions/runner-images
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=gcc --cxx=g++
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  gcc-compile-with-cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-dependences
    - name: cmake 
      run: |
           export CC=gcc && export CXX=g++
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  gcc-compile-with-bazel:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install dependences
      run: |
           sudo apt-get update
           sudo apt-get install libibverbs-dev
    - name: compile
      run: |
           export CC=gcc && export CXX=g++
           bazel build -j ${{env.proc_num}} -c opt --copt -DHAVE_ZLIB=1 //...

  gcc-compile-with-make-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=gcc --cxx=g++ --with-thrift --with-glog
    - name: compile
      run: |
           # TODO: 其实make过程中有这个protoc命令，但这里不单独执行一次，经常会导致mcpack2pb编译失败，后续再排查解决
           /usr/bin/protoc --cpp_out=./src --proto_path=./src --proto_path=/usr/include/ src/idl_options.proto
           make -j ${{env.proc_num}}

  gcc-compile-with-cmake-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - name: cmake 
      run: |
           export CC=gcc && export CXX=g++
           mkdir build
           cd build
           cmake -DWITH_MESALINK=OFF -DWITH_GLOG=ON -DWITH_THRIFT=ON ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  gcc-compile-with-bazel-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install dependences
      run: |
           sudo apt-get update
           sudo apt-get install libibverbs-dev
    - name: compile
      run: |
           export CC=gcc && export CXX=g++
           bazel build -j 12 -c opt --define with_mesalink=false --define with_glog=true --define with_thrift=true --copt -DHAVE_ZLIB=1 //...


  clang-compile-with-make:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=clang --cxx=clang++
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  clang-compile-with-cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-dependences
    - name: cmake 
      run: |
           export CC=clang && export CXX=clang++
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  clang-compile-with-bazel:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install dependences
      run: |
           sudo apt-get update
           sudo apt-get install libibverbs-dev
    - name: compile
      run: |
           export CC=clang && export CXX=clang++
           bazel build -j ${{env.proc_num}} -c opt --copt -DHAVE_ZLIB=1 //...

  clang-compile-with-make-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=clang --cxx=clang++ --with-thrift --with-glog
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  clang-compile-with-cmake-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - name: cmake 
      run: |
           export CC=clang && export CXX=clang++
           mkdir build
           cd build
           cmake -DWITH_MESALINK=OFF -DWITH_GLOG=ON -DWITH_THRIFT=ON ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  clang-compile-with-bazel-all-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install dependences
      run: |
           sudo apt-get update
           sudo apt-get install libibverbs-dev
    - name: compile
      run: |
           export CC=clang && export CXX=clang++
           bazel build -j ${{env.proc_num}} -c opt --define with_mesalink=false --define with_glog=true --define with_thrift=true --copt -DHAVE_ZLIB=1 //...
