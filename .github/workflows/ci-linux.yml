name: Build and Test on Linux

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'

env:
  proc_num: $(nproc)

jobs:
  gcc-compile-with-make:
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-essential-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=gcc --cxx=g++ --werror
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  gcc-compile-with-cmake:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-essential-dependences
    - name: cmake
      run: |
           export CC=gcc && export CXX=g++
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  gcc-compile-with-bazel:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel test --verbose_failures -- //... -//example/...

  gcc-compile-with-boringssl:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel test --verbose_failures --define with_mesalink=false --define with_glog=true --define with_thrift=true --define BRPC_WITH_BORINGSSL=true -- //... -//example/...

  gcc-compile-with-make-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - uses: ./.github/actions/init-make-config
      with:
       options: --cc=gcc --cxx=g++ --with-thrift --with-glog --with-rdma  --with-debug-bthread-sche-safety --with-debug-lock --with-bthread-tracer --werror
    - name: compile
      run: |
        make -j ${{env.proc_num}}

  gcc-compile-with-cmake-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - name: cmake
      run: |
           export CC=gcc && export CXX=g++
           mkdir build
           cd build
           cmake -DWITH_MESALINK=OFF -DWITH_GLOG=ON -DWITH_THRIFT=ON -DWITH_RDMA=ON -DWITH_DEBUG_BTHREAD_SCHE_SAFETY=ON -DWITH_DEBUG_LOCK=ON -WITH_BTHREAD_TRACER=ON ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  gcc-compile-with-bazel-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel test --verbose_failures --define with_mesalink=false --define with_glog=true --define with_thrift=true --define with_debug_bthread_sche_safety=true --define with_debug_lock=true -- //... -//example/...

  clang-compile-with-make:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-essential-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=clang --cxx=clang++ --werror
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  clang-compile-with-cmake:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-essential-dependences
    - name: cmake
      run: |
           export CC=clang && export CXX=clang++
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  clang-compile-with-bazel:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel build --verbose_failures --action_env=CC=clang-12 -- //... -//example/...

  clang-compile-with-boringssl:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel build --verbose_failures --action_env=CC=clang-12 --define with_mesalink=false --define with_glog=true --define with_thrift=true --define BRPC_WITH_BORINGSSL=true -- //... -//example/...

  clang-compile-with-make-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - uses: ./.github/actions/init-make-config
      with:
        options: --cc=clang --cxx=clang++ --with-thrift --with-glog --with-rdma  --with-debug-bthread-sche-safety --with-debug-lock --with-bthread-tracer --werror
    - name: compile
      run: |
           make -j ${{env.proc_num}}

  clang-compile-with-cmake-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install-all-dependences
    - name: cmake
      run: |
           export CC=clang && export CXX=clang++
           mkdir build
           cd build
           cmake -DWITH_MESALINK=OFF -DWITH_GLOG=ON -DWITH_THRIFT=ON -DWITH_RDMA=ON -DWITH_DEBUG_BTHREAD_SCHE_SAFETY=ON -DWITH_DEBUG_LOCK=ON -WITH_BTHREAD_TRACER=ON ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}

  clang-compile-with-bazel-all-options:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: bazel build --verbose_failures --action_env=CC=clang-12 --define with_mesalink=false --define with_glog=true --define with_thrift=true --define with_debug_bthread_sche_safety=true --define with_debug_lock=true -- //... -//example/...

  clang-unittest:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-essential-dependences
      - uses: ./.github/actions/init-ut-make-config
        with:
          options: --cc=clang --cxx=clang++ --with-bthread-tracer
      - name: compile tests
        run: |
          cat config.mk
          cd test
          make -j ${{env.proc_num}}
      - name: run tests
        run: |
          cd test
          sh ./run_tests.sh
