name: Build and Test on Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  proc_num: $(nproc)

jobs:
  compile-with-make:
    runs-on: ubuntu-latest # https://github.com/actions/runner-images

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get install -y git g++ make libssl-dev libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev libgoogle-perftools-dev
    - name: config_brpc
      run: |
           ./config_brpc.sh --header="/usr/local/include /usr/include" --libs="/usr/local/lib /usr/local/lib64 /usr/lib /usr/lib64"
    - name: compile
      run: |
           make -j ${{env.proc_num}}
   
  compile-with-cmake:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get install -y git g++ make libssl-dev libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev
    - name: cmake 
      run: |
           mkdir build
           cd build
           cmake ..
    - name: compile
      run: |
           cd build
           make -j ${{env.proc_num}}
           
  compile-with-bazel:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get update
           sudo apt-get install libibverbs-dev
    - name: compile
      run: |
           bazel build -j ${{env.proc_num}} -c opt --copt -DHAVE_ZLIB=1 //...

  unittest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependences
      run: |
           sudo apt-get install -y git g++ make libssl-dev libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev libgoogle-perftools-dev
           sudo apt-get install -y cmake libgtest-dev && cd /usr/src/gtest && sudo cmake . && sudo make && sudo mv lib/libgtest* /usr/lib/
    - name: config brpc
      run: |
           ./config_brpc.sh --header="/usr/local/include /usr/include" --libs="/usr/local/lib /usr/local/lib64 /usr/lib /usr/lib64"
    - name: compile
      run: |
           cd test
           make -j ${{env.proc_num}}
    - name: run tests
      run: |
           cd test
           sh ./run_tests.sh
